{"version":3,"sources":["routes.js","contexts/auth.js","contexts/order.js","contexts/index.js","services/firebase.js","hooks/auth.js","hooks/order.js","hooks/index.js","root.js","app.js","serviceWorker.js","error.js","index.js"],"names":["__webpack_require__","d","__webpack_exports__","HOME","LOGIN","CHOOSE_PIZZA_FLAVOURS","CHOOSE_PIZZA_QUANTITY","CHECKOUT","AuthContext","createContext","AuthProvider","_ref","children","_useState","useState","isUserLogedIn","user","_useState2","Object","slicedToArray","userInfo","setUserInfo","login","useCallback","provider","firebase","auth","GithubAuthProvider","signInWithRedirect","logout","signOut","then","react_default","a","createElement","Provider","value","OrderContext","OrderProvider","pizzas","addPizza","order","addPizzaToOrder","pizza","concat","firebase_app__WEBPACK_IMPORTED_MODULE_0__","firebase_app__WEBPACK_IMPORTED_MODULE_0___default","n","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","useAuth","useContext","useOrder","theme","createMuiTheme","typography","useNextVariants","GlobalStyle","createGlobalStyle","_templateObject","hot","module","react__WEBPACK_IMPORTED_MODULE_1___default","_material_ui_core__WEBPACK_IMPORTED_MODULE_7__","styled_components__WEBPACK_IMPORTED_MODULE_3__","contexts__WEBPACK_IMPORTED_MODULE_9__","_material_ui_core__WEBPACK_IMPORTED_MODULE_8__","react_router_dom__WEBPACK_IMPORTED_MODULE_4__","react_router_dom__WEBPACK_IMPORTED_MODULE_5__","component","App","MainPage","lazy","Promise","all","e","bind","Login","location","_useAuth","_Users_lucas_Documents_myProjects_sistema_pedidos_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","didCheckUserIn","setDidCheckUserIn","useEffect","onAuthStateChanged","_Users_lucas_Documents_myProjects_sistema_pedidos_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","firstName","displayName","split","pathname","react__WEBPACK_IMPORTED_MODULE_2___default","react_router_dom__WEBPACK_IMPORTED_MODULE_3__","to","react__WEBPACK_IMPORTED_MODULE_2__","fallback","_material_ui_core__WEBPACK_IMPORTED_MODULE_4__","path","Boolean","window","hostname","match","ErrorBoundary","state","hasError","this","props","PureComponent","protoTypes","t","func","isRequired","ReactDOM","render","error","root","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b81edc4a.chunk.js","sourcesContent":["export const HOME = '/'\nexport const LOGIN = '/login'\nexport const CHOOSE_PIZZA_FLAVOURS = '/choose-pizza-flavours'\nexport const CHOOSE_PIZZA_QUANTITY = '/choose-pizza-quantity'\nexport const CHECKOUT = '/checkout'\n","import React, { createContext, useCallback, useState } from 'react'\nimport firebase from '../services/firebase'\n\nconst AuthContext = createContext()\n\nfunction AuthProvider ({ children }) {\n  const [userInfo, setUserInfo] = useState({\n    isUserLogedIn: false,\n    user: null\n  })\n\n  const login = useCallback(() => {\n    const provider = new firebase.auth.GithubAuthProvider()\n    firebase.auth().signInWithRedirect(provider)\n  }, [])\n\n  const logout = useCallback(() => {\n    firebase.auth().signOut().then(() => {\n      setUserInfo({ isUserLogedIn: false, user: null })\n    })\n  }, [])\n\n  return (\n    <AuthContext.Provider value={{\n      login,\n      logout,\n      userInfo,\n      setUserInfo\n    }}>\n      {children}\n    </AuthContext.Provider>\n  )\n}\n\nexport { AuthProvider, AuthContext }\n","import React, { createContext, useState } from 'react'\nimport t from 'prop-types'\n\nconst OrderContext = createContext()\n\nfunction OrderProvider ({ children }) {\n  const [pizzas, addPizza] = useState([])\n\n  function addPizzaToOrder (pizza) {\n    addPizza((pizzas) => pizzas.concat(pizza))\n  }\n\n  return (\n    <OrderContext.Provider value={{\n      order: {\n        pizzas\n      },\n      addPizzaToOrder\n    }}>\n      {children}\n    </OrderContext.Provider>\n  )\n}\n\nOrderProvider.propTypes = {\n  children: t.node.isRequired\n}\n\nexport { OrderProvider, OrderContext }\n","export * from './auth'\nexport * from './order'\n","import firebase from 'firebase/app'\nimport 'firebase/auth'\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyCZ4fuGJyXh25M5NonyG2CvknO20S0FyfQ',\n  authDomain: 'reactzzaria-c030e.firebaseapp.com',\n  databaseURL: 'https://reactzzaria-c030e.firebaseio.com',\n  projectId: 'reactzzaria-c030e',\n  storageBucket: '',\n  messagingSenderId: '563457483452',\n  appId: '1:563457483452:web:2652f9d4e79d0922'\n}\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig)\n\nexport default firebase\n","import { useContext } from 'react'\nimport { AuthContext } from 'contexts'\n\nfunction useAuth () {\n  return useContext(AuthContext)\n}\n\nexport default useAuth\n","import { useContext } from 'react'\nimport { OrderContext } from 'contexts'\n\nfunction useOrder () {\n  return useContext(OrderContext)\n}\n\nexport default useOrder\n","export { default as useAuth } from './auth'\nexport { default as useOrder } from './order'\n","import React from 'react'\nimport { hot } from 'react-hot-loader'\nimport { ThemeProvider, createGlobalStyle } from 'styled-components'\nimport { BrowserRouter, Route } from 'react-router-dom'\nimport {\n  CssBaseline,\n  createMuiTheme,\n  MuiThemeProvider\n} from '@material-ui/core'\nimport { AuthProvider, OrderProvider } from 'contexts'\nimport App from './app'\n\nconst theme = createMuiTheme({\n  typography: {\n    useNextVariants: true\n  }\n})\n\nfunction Root () {\n  return (\n    <MuiThemeProvider theme={theme}>\n      <ThemeProvider theme={theme}>\n        <AuthProvider>\n          <OrderProvider>\n            <CssBaseline />\n            <GlobalStyle />\n\n            <BrowserRouter>\n              <Route component={App} />\n            </BrowserRouter>\n          </OrderProvider>\n        </AuthProvider>\n      </ThemeProvider>\n    </MuiThemeProvider>\n  )\n}\n\nconst GlobalStyle = createGlobalStyle`\n  #root {\n    display: flex;\n    flex-direction: column;\n    min-height: 100vh;\n  }\n`\n\nexport default hot(module)(Root)\n","import React, { Suspense, lazy, useEffect, useState } from 'react'\nimport { Redirect, Route, Switch } from 'react-router-dom'\nimport { LinearProgress } from '@material-ui/core'\nimport firebase from './services/firebase'\nimport { useAuth } from 'hooks'\n\nimport { HOME, LOGIN } from 'routes'\n\nconst MainPage = lazy(() => import('./pages/main'))\nconst Login = lazy(() => import('./pages/login'))\n\nfunction App ({ location }) {\n  const { userInfo, setUserInfo } = useAuth()\n  const [didCheckUserIn, setDidCheckUserIn] = useState(false)\n\n  const { isUserLogedIn } = userInfo\n\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged((user) => {\n      setUserInfo({\n        isUserLogedIn: !!user,\n        user: user && {\n          ...user,\n          firstName: user.displayName.split(' ')[0]\n        }\n      })\n      setDidCheckUserIn(true)\n    })\n  }, [setUserInfo])\n\n  if (!didCheckUserIn) {\n    return <LinearProgress />\n  }\n\n  if (isUserLogedIn && location.pathname === LOGIN) {\n    return <Redirect to={HOME} />\n  }\n\n  if (!isUserLogedIn && location.pathname !== LOGIN) {\n    return <Redirect to={LOGIN} />\n  }\n\n  return (\n    <Suspense fallback={<LinearProgress />}>\n      <Switch>\n        <Route path={LOGIN} component={Login} />\n        <Route path={HOME} component={MainPage} />\n      </Switch>\n    </Suspense>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import { PureComponent } from 'react'\nimport t from 'prop-types'\n\nclass ErrorBoundary extends PureComponent {\n  state = { hasError: false }\n\n  static protoTypes = {\n    children: t.func.isRequired\n  }\n\n  static getDerivedStateFromError () {\n    return { hasError: true }\n  }\n\n  render () {\n    return this.props.children(this.state.hasError)\n  }\n}\n\nexport default ErrorBoundary\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport Root from './root'\nimport * as serviceWorker from './serviceWorker'\nimport ErrorBoundary from './error'\n\nReactDOM.render(\n  <ErrorBoundary>\n    {(hasError) => (\n      <Root hasError={hasError} />\n    )}\n  </ErrorBoundary>,\n  document.getElementById('root')\n)\n\nserviceWorker.unregister()\n"],"sourceRoot":""}