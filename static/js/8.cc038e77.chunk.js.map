{"version":3,"sources":["ui/divider.js","ui/title.js","ui/header-content.js","ui/pizzas-grid.js","ui/card-link.js","ui/Content.js","ui/index.js","utils/singular-or-plural.js","utils/to-money.js","utils/index.js","fake-data/pizza-flavours.js","pages/choose-pizza-flavours/choose-pizza-flavours.js","pages/choose-pizza-flavours/index.js"],"names":["Divider","styled","MaterialDevider","_templateObject","_ref","theme","spacing","Title","Typography","attrs","gutterBottom","align","title_templateObject","H3","props","react_default","a","createElement","Object","assign","variant","H4","HeaderContent","children","Grid","container","direction","alignItems","PizzasGrid","pizzas_grid_templateObject","CardLink","CardActionArea","component","Link","card_link_templateObject","Content","main","Content_templateObject","_ref2","__webpack_require__","d","__webpack_exports__","divider","title_H3","title_H4","header_content","pizzas_grid","card_link","ui_Content","singularOrPlural","amount","singular","plural","toMoney","value","Number","toLocaleString","style","currency","singular_or_plural","to_money","pizza_flavours","id","image","name","values","0","1","2","Label","Checkbox","input","type","_templateObject2","Card","MaterialCard","_templateObject3","checked","palette","secondary","light","Img","img","_templateObject4","Footer","footer","_templateObject5","_ref3","grey","_ref4","OrderContainer","item","_templateObject6","Button","MaterialButton","_templateObject7","_ref5","ChoosePizzaFlavours","location","_useState","useState","_useState2","slicedToArray","checkboxes","setCheckboxes","userInfo","useContext","AuthContext","state","react_router","to","HOME","_location$state","flavours","slices","handleChangeCheckbox","pizzaId","e","checkbox","filter","Boolean","length","target","objectSpread","defineProperty","Fragment","ui","pizzaFlavours","map","pizza","key","xs","choose_pizza_flavours_Card","onChange","src","alt","Container","user","firstName","toUpperCase","choose_pizza_flavours_Button","CHOOSE_PIZZA_QUANTITY","color","choose_pizza_flavours"],"mappings":"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","file":"static/js/8.cc038e77.chunk.js","sourcesContent":["import { Divider as MaterialDevider } from '@material-ui/core'\nimport styled from 'styled-components'\n\nconst Divider = styled(MaterialDevider)`\n  && {\n    margin ${({ theme }) => theme.spacing(3)}px;\n    width: 100%;\n  }\n`\n\nexport default Divider\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Typography } from '@material-ui/core'\n\nconst Title = styled(Typography).attrs({\n  gutterBottom: true,\n  align: 'center'\n})``\n\nexport const H3 = (props) => <Title variant='h3' {...props}/>\nexport const H4 = (props) => <Title variant='h4' {...props}/>\n\nexport default Title\n","import React from 'react'\nimport { Grid } from '@material-ui/core'\n\nconst HeaderContent = ({ children }) => (\n  <Grid container direction='column' alignItems='center'>\n    {children}\n  </Grid>\n)\n\nexport default HeaderContent\n","\nimport styled from 'styled-components'\nimport { Grid } from '@material-ui/core'\n\nconst PizzasGrid = styled(Grid).attrs({\n  container: true,\n  spacing: 2\n})`\n&& {\n  padding: ${({ theme }) => theme.spacing(3)}px;;\n}\n`\n\nexport default PizzasGrid\n","import { Link } from 'react-router-dom'\nimport { CardActionArea } from '@material-ui/core'\nimport styled from 'styled-components'\n\nconst CardLink = styled(CardActionArea).attrs({\n  component: Link\n})`\n  && {\n    display: flex;\n    flex-direction: column;\n    padding: ${({ theme }) => theme.spacing(3, 0)};\n  }\n`\n// min-width: 250px;\n\nexport default CardLink\n","import styled from 'styled-components'\n\nconst Content = styled.main`\u001c\n  padding: ${({ theme }) => theme.spacing(3)}px;\n  padding: ${({ theme }) => theme.spacing(3)}px;\n  flex-grow: 1;\n`\n\nexport default Content\n","export { default as Divider } from './divider'\nexport { default as Title, H3, H4 } from './title'\nexport { default as HeaderContent } from './header-content'\nexport { default as PizzasGrid } from './pizzas-grid'\nexport { default as CardLink } from './card-link'\nexport { default as Content } from './Content'\n","\nfunction singularOrPlural (amount, singular, plural) {\n  return amount === 1 ? singular : plural\n}\n\nexport default singularOrPlural\n","function toMoney (value) {\n  return Number(value).toLocaleString('pt-BR', {\n    style: 'currency',\n    currency: 'BRL'\n  })\n}\n\nexport default toMoney\n","export { default as singularOrPlural } from './singular-or-plural'\nexport { default as toMoney } from './to-money'\n","export default [\n  {\n    id: 0,\n    image: 'fake-data/images/pizza-frango.jpeg',\n    name: 'Frango',\n    values: {\n      0: 20,\n      1: 30,\n      2: 40\n    }\n  },\n  {\n    id: 1,\n    image: 'fake-data/images/pizza-milho.jpeg',\n    name: 'Milho',\n    values: {\n      0: 25,\n      1: 35,\n      2: 45\n    }\n  },\n  {\n    id: 2,\n    image: 'fake-data/images/pizza-portuguesa.jpg',\n    name: 'Frango',\n    values: {\n      0: 28,\n      1: 38,\n      2: 48\n    }\n  }\n]\n","import React, { useState, useContext } from 'react'\nimport { AuthContext } from 'contexts/auth'\nimport { Link, Redirect } from 'react-router-dom'\nimport { HOME, CHOOSE_PIZZA_QUANTITY } from 'routes'\nimport styled from 'styled-components'\nimport pizzaFlavours from 'fake-data/pizza-flavours'\nimport {\n  singularOrPlural,\n  toMoney\n} from 'utils'\nimport {\n  Button as MaterialButton,\n  Container,\n  Divider,\n  Grid,\n  Card as MaterialCard,\n  Typography\n} from '@material-ui/core'\nimport {\n  Content,\n  CardLink,\n  H4,\n  HeaderContent,\n  PizzasGrid\n} from 'ui'\n\nconst ChoosePizzaFlavours = ({ location }) => {\n  const [checkboxes, setCheckboxes] = useState(() => ({}))\n  const { userInfo } = useContext(AuthContext)\n\n  if (!location.state) {\n    return <Redirect to={HOME} />\n  }\n\n  const { flavours, id, name, slices } = location.state\n\n  const handleChangeCheckbox = (pizzaId) => (e) => {\n    if (\n      checkboxCheckeds(checkboxes).length === flavours && e.target.checked === true) {\n      return\n    }\n    setCheckboxes((checkboxes) => {\n      return {\n        ...checkboxes,\n        [pizzaId]: e.target.checked\n      }\n    })\n  }\n\n  return (\n    <>\n      <Content>\n        <HeaderContent>\n          <H4>\n            Escolha até {flavours} {' '}\n            {singularOrPlural(flavours, 'sabor', 'sabores')}\n          </H4>\n        </HeaderContent>\n\n        <PizzasGrid>\n          {pizzaFlavours.map((pizza) => (\n            <Grid item key={pizza.id} xs>\n              <Card checked={!!checkboxes[pizza.id]}>\n                <Label>\n                  <Checkbox\n                    checked={!!checkboxes[pizza.id]}\n                    onChange={handleChangeCheckbox(pizza.id)}\n                  />\n                  <Img src={pizza.image} alt={pizza.name} />\n\n                  <Divider />\n\n                  <Typography>{pizza.name}</Typography>\n                  <Typography variant='h5'>{toMoney(pizza.values[id])}</Typography>\n                </Label>\n              </Card>\n            </Grid>\n          ))}\n        </PizzasGrid>\n      </Content>\n\n      <Footer>\n        <Container>\n          <Grid container>\n            <OrderContainer>\n              <Typography>\n                <b>{userInfo.user.firstName}, seu pedido é</b>\n              </Typography>\n              <Typography>\n                Pizza <b>{name.toUpperCase()}</b> {'- '}\n                ({slices} {singularOrPlural(slices, 'fatia', 'fatias')}, {' '}\n                {flavours} {singularOrPlural(flavours, 'sabor', 'sabores')})\n              </Typography>\n            </OrderContainer>\n\n            <Grid item>\n              <Button to={HOME} >Mudar Tamanho</Button>\n              <Button to={CHOOSE_PIZZA_QUANTITY} color='primary'>Quantidade de Pizzas </Button>\n            </Grid>\n          </Grid>\n        </Container>\n      </Footer>\n\n    </>\n  )\n}\n\nfunction checkboxCheckeds (checkbox) {\n  return Object.values(checkbox).filter(Boolean)\n}\n\nconst Label = styled(CardLink).attrs({\n  component: 'label'\n})``\n\nconst Checkbox = styled.input.attrs({\n  type: 'checkbox'\n})`\n  display: none;\n`\n\nconst Card = styled(MaterialCard)`\n  &&{\n    border: 2px solid transparent;\n    border-color: ${({ theme, checked }) => checked ? theme.palette.secondary.light : ''}\n  }\n`\n\nconst Img = styled.img`\n  width: 200px;\n  height: 200px\n`\n\nconst Footer = styled.footer`\n  box-shadow: 0 0 3px ${({ theme }) => theme.palette.grey[400]};\n  padding: ${({ theme }) => theme.spacing(3)}px;\n  width: 100%;\n`\n\nconst OrderContainer = styled(Grid).attrs({\n  item: true\n})`\n  &&{\n    flex-grow: 1;\n  }\n`\n\nconst Button = styled(MaterialButton).attrs({\n  variant: 'contained',\n  component: Link\n})`\n  &&{\n    margin-left: ${({ theme }) => theme.spacing(2)}px;\n  }\n`\n\nexport default ChoosePizzaFlavours\n","export { default } from './choose-pizza-flavours'\n"],"sourceRoot":""}